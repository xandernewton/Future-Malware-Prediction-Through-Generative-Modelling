import binascii
import sys
import os
from math import log
import numpy as np
import scipy as sp
from PIL import Image
from tqdm import tqdm
import os.path
from os import path
from pathlib import Path


def saveimg(array, name, saveFile = False):
    save_dir = '/run/media/alex/New Volume/malware_binary/malicious_images/'
    #print(name)
    #print(array.shape)
    if array.shape[1] != 16:
        assert (False)
    b = int((array.shape[0] * 16) ** (0.5))
    b = 2 ** (int(log(b) / log(2)) + 1)
    a = int(array.shape[0] * 16 / b)
    #print(a, b, array.shape)
    c = int(a * b / 16)
    array = array[:c, :]

    array = np.reshape(array, (a, b))
    # print array.shape
    # array = np.uint8(array)
    # print array
    # array.resize((128,128))

    im = Image.fromarray(np.uint8(array))
    if saveFile:
        im.save(save_dir + name + '.png', "PNG")
        del array
        return
    return im


def convert_to_array(x):
    chunk_size = 16
    with open(f'{x}', 'rb') as f:
        array = []
        while True:
            data = f.read(chunk_size)
            if data:
                hex_values = binascii.hexlify(data).decode('utf-8')
                hex_values = [hex_values[i:i + 2] for i in range(0, len(hex_values), 2)]
                if len(hex_values) != 16:
                    continue
                array.append([int(i, 16) if i != '??' else 0 for i in hex_values])
            else:
                break
    return np.array(array)


def convert_to_array_2(x):
    with open(f'{x}', 'r') as f:
        array = []
        for line in f:
            xx = line.split()
            if len(xx) != 17:
                continue
            # if xx[1]=='??':
            #    break
            array.append([int(i, 16) if i != '??' else 0 for i in xx[1:]])
    return np.array(array)



def convert_folder():
    dir = "/run/media/alex/New Volume/malware_binary/Malicious/"
    files = os.listdir(dir)
    c = 0
    for cc, x in tqdm(enumerate(files),total=len(files)):
        if path.exists("/run/media/alex/New Volume/malware_binary/malicious_images/"+x+".png"):
            continue
        elif Path(dir + x).stat().st_size > 1000000:
            continue
        else:
            c +=1
        #print(cc)
        #print(f"C = {c}
        array = convert_to_array(dir + x)
        saveimg(array, x, saveFile=True)
    #print(c)


if __name__ == '__main__':
    convert_folder()
